/* cdwDataset.h was originally generated by the autoSql program, which also 
 * generated cdwDataset.c and cdwDataset.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef CDWDATASET_H
#define CDWDATASET_H

#define CDWDATASET_NUM_COLS 5

extern char *cdwDatasetCommaSepFieldNames;

struct cdwDataset
/* A dataset is a collection of files, usually associated to a paper */
    {
    struct cdwDataset *next;  /* Next in singly linked list. */
    char *name;	/* Short name of this dataset, one word, no spaces */
    char *label;	/* short title of the dataset, a few words */
    char *description;	/* Description of dataset, can be a complete html paragraph. */
    char *pmid;	/* Pubmed ID of abstract */
    char *pmcid;	/* PubmedCentral ID of paper full text */
    };

void cdwDatasetStaticLoad(char **row, struct cdwDataset *ret);
/* Load a row from cdwDataset table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct cdwDataset *cdwDatasetLoad(char **row);
/* Load a cdwDataset from row fetched with select * from cdwDataset
 * from database.  Dispose of this with cdwDatasetFree(). */

struct cdwDataset *cdwDatasetLoadAll(char *fileName);
/* Load all cdwDataset from whitespace-separated file.
 * Dispose of this with cdwDatasetFreeList(). */

struct cdwDataset *cdwDatasetLoadAllByChar(char *fileName, char chopper);
/* Load all cdwDataset from chopper separated file.
 * Dispose of this with cdwDatasetFreeList(). */

#define cdwDatasetLoadAllByTab(a) cdwDatasetLoadAllByChar(a, '\t');
/* Load all cdwDataset from tab separated file.
 * Dispose of this with cdwDatasetFreeList(). */

struct cdwDataset *cdwDatasetCommaIn(char **pS, struct cdwDataset *ret);
/* Create a cdwDataset out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new cdwDataset */

void cdwDatasetFree(struct cdwDataset **pEl);
/* Free a single dynamically allocated cdwDataset such as created
 * with cdwDatasetLoad(). */

void cdwDatasetFreeList(struct cdwDataset **pList);
/* Free a list of dynamically allocated cdwDataset's */

void cdwDatasetOutput(struct cdwDataset *el, FILE *f, char sep, char lastSep);
/* Print out cdwDataset.  Separate fields with sep. Follow last field with lastSep. */

#define cdwDatasetTabOut(el,f) cdwDatasetOutput(el,f,'\t','\n');
/* Print out cdwDataset as a line in a tab-separated file. */

#define cdwDatasetCommaOut(el,f) cdwDatasetOutput(el,f,',',',');
/* Print out cdwDataset as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* CDWDATASET_H */

